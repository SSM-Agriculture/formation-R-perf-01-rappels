---
editor: 
  markdown: 
    wrap: 72
---

# Naviguer à l'intérieur des objets R (indexation) {.backgroundTitre}

## Pour quoi faire?

-   Extraire un élément d' un objet (ex : tous les nombres supérieurs à 10)

-   Remplacer un élément par un autre (ex : remplacer toutes les chaînes
    "Bov." par "Bovins")

-   Ajouter un élément (ex : une nouvelle variable à un data.frame)

```{.r}
nombres <-  1:20
nombres[nombres>10]

# > [1] 11 12 13 14 15 16 17 18 19 20

mes_lettres <- letters[1:5]
mes_lettres[3] <- "g"
mes_lettres

# > [1] "a" "b" "g" "d" "e"

mon_df <- data.frame(letters,LETTERS)
mon_df["concat"] <- paste0(letters,LETTERS)
mon_df[1,]

# >   letters LETTERS concat
1       a       A     aA
```


## Vecteur, indexation avec les crochets:

-   Indexation **par position** :

`x <- c("Marion", "Benjamin", "Hélène", "Raymond"))`

`x[1] renvoie "Marion"`

`x[c(1, 2)] renvoie le vecteur c("Marion", "Benjamin")`

-   Indexation **par condition logique** :

`x <- c(8.04, 18.01, 11.05, 14.05)`

`x[x < 10] renvoie 8.04`

`x[x > 10] renvoie le vecteur c(18.01, 11.05, 14.05)`

`x[x >10 & x < 15] renvoie le vecteur c(11.05, 14.05)`

## Data.frame (1/3) : principes de navigation

-   Indexation **par position** : \[numéro de ligne, numéro de colonne\]

-   Indexation **par nom** : les vecteurs d'une data.frame sont nommés
    et accessibles directement dans les crochets ou via l'opérateur `$`

-   Les moyens d'indexation peuvent se combiner et permettre de filtrer
    les colonnes et les lignes (équivalent de `select()` et `filter()`)

→ Il y a donc une multitude de façons d'accéder à une valeur dans un data.frame !

## Data.frame (2/3) : illustration

![](img/clipboard-premon-sexe-taille.png){fig-align="center"}

## Data.frame (3/3) : exemple de code

```{.r}

mon_df <- data.frame(letters,LETTERS) # création du data.frame avec les lettres de l'alphabet
mon_df[1,] # un data.frame avec uniquement la 1ère ligne
mon_df[,1] # un vecteur avec la 1ère colonne,
mon_df["letters"] # attention si pas de virgule, renvoie un data.frame d'une seule colonne
mon_df[["letters"]] # pour extraire le vecteur, il faut mettre deux crochets
mon_df$letters[1:4]  # avec le symbole $ on a aussi un vecteur qu'on peut indexer aussi (4 premières valeurs)
```


## Création ou modification de variables dans un data.frame en R de base

-   Avec **R de base**, on utilise l'opérateur d'affectation :

-   `table$new_var <- variable` → formule générique

-   `table$new_var <- valeur_constante` → création d'une constante

-   `table$new_var <- fonction(table$var1)` → création à partir d'une formule

-   `table$new_var <- table$var1 + table$var2` → création à partir d'opérations

-   `table$new_var <- vecteur1 OU table1$new_var <- table2$var1` → création à partir de variables externes

-   `table$new_var <- ifelse(table$varref < x, val1, val2)` OU
    `table$new_var <- case_when(table$varref < x ~ val1, TRUE ~ val2)`  → traitement conditionnel

## Listes

Indexation **par position** :

   `x <- list(c(TRUE, TRUE, FALSE), c(8.04, 18.01, 11.05, 14.05), "804")`
   
   => x[[2]] renvoie le deuxième vecteur de la liste x soit `c(8.04, 18.01, 11.05, 14.05)`  
   
   => x[[2]][1] renvoie le premier élément du deuxième vecteur de la liste x soit `8.04`  

::: callout-note
Attention :  
   x[2], avec de simples crochets, renvoie une liste composée d'un élément : le 2e vecteur de la liste x
::: 

```

Indexation **par nom** si les vecteurs sont nommés avec l'opérateur \$ :
```{.r}
   `x <- list(grp = c("Auguste", "Justine", "Sébastien", "Anne-Marie"), prt = c("Hélène", "Raymond"), enf = c("Marion", "Benjamin")`
   `x$grp renvoie le vecteur nommé "grp" de la liste x soit c("Auguste", "Justine", "Sébastien", "Anne-Marie")`
   `x$enf[1] renvoie le premier élément du vecteur nommé "enf" de la liste x soit "Marion"`
```
NB : Possibilité d'utiliser la fonction `pluck()` du package purrr (pour éviter de s'y perdre)
```{.r}
   `x <- list(c(TRUE, TRUE, FALSE), c(8.04, 18.01, 11.05, 14.05), "804")`
   `pluck(x,2) renvoie le deuxième vecteur de la liste x soit c(8.04, 18.01, 11.05, 14.05)`
   `pluck(x,2,1) renvoie le premier élément du deuxième vecteur de la liste x soit 8.04`


```

## Matrices et arrays, indexation avec les crochets:

Indexation **par position** :

-   `x <- matrix(c("Marion", "Benjamin", "Hélène", "Raymond"), nrow = 2, ncol = 2)`
-   `x[1,] renvoie le vecteur c("Marion", "Hélène")`
-   `x[,2] renvoie le vecteur c("Hélène", "Raymond")`
-   `x[2,1] renvoie "Benjamin"`

<br>

``` r
     [,1]       [,2]     
[1,] "Marion"   "Hélène" 
[2,] "Benjamin" "Raymond"
```
